generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  stripeId      String?   @unique
  subscriptionId String?
  courses       Course[]
  progress      Progress[]
}

model Course {
  id          String    @id @default(cuid())
  title       String
  description String
  platform    Platform
  level       Level
  price       Float
  published   Boolean   @default(false)
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])
  chapters    Chapter[]
  progress    Progress[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Chapter {
  id          String    @id @default(cuid())
  title       String
  description String
  videoUrl    String
  position    Int
  courseId    String
  course      Course    @relation(fields: [courseId], references: [id])
  progress    Progress[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Progress {
  id          String    @id @default(cuid())
  userId      String
  courseId    String
  chapterId   String
  completed   Boolean   @default(false)
  user        User      @relation(fields: [userId], references: [id])
  course      Course    @relation(fields: [courseId], references: [id])
  chapter     Chapter   @relation(fields: [chapterId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([userId, courseId, chapterId])
}

enum Role {
  USER
  ADMIN
  INSTRUCTOR
}

enum Platform {
  YOUTUBE
  TIKTOK
  INSTAGRAM
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}